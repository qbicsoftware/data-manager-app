.main {
  display: grid;
  height: 100%;
}

.main.experiment {
  grid-template-columns: minmax(max-content, 100%);
  grid-template-rows: auto;
  grid-template-areas:
    "experimentdetails";
}

.main.experiment .experiment-details-component {
  grid-area: experimentdetails;
}

.main.measurement {
  grid-template-columns: minmax(max-content, 70%) minmax(max-content, 30%);
  grid-template-rows: minmax(max-content, 20%) minmax(max-content, 75%);
  grid-template-areas:
    ". measurementtemplatelist"
    "measurementdetails measurementdetails";
}

.main.measurement .measurement-template-list-component {
  grid-area: measurementtemplatelist;
}


.main.measurement .measurement-details-component {
  grid-area: measurementdetails
}

.main.measurement .measurement-main-content {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-m);
  padding: var(--lumo-space-m);
}


.main.measurement .measurement-main-content .title {
  font-weight: bold;
  color: var(--lumo-secondary-text-color);
  font-size: var(--lumo-font-size-xxl);
  margin-bottom: 0.5rem;
}

.main.measurement .measurement-main-content .buttonAndField {
  display: inline-flex;
  justify-content: space-between;
  /*Moves this bar to end of container*/
  margin-top: auto;
}

.main.ontology-lookup-main {
  grid-template-columns: auto;
  grid-template-rows: auto;
  grid-template-areas:
    "ontologylookupcomponent"
}

.main.ontology-lookup-component {
  grid-area: ontologylookupcomponent;
}
.main.project {
  grid-template-columns: minmax(min-content, 80%) minmax(min-content, 25%);
  grid-template-rows: auto;
  grid-template-areas:
    "projectdetails experimentlist"
    "projectdetails offerlist"
    "projectdetails qualitycontrollist";
}

.main.project .project-details-component {
  grid-area: projectdetails;
}

.main.project .experiment-list-component {
  grid-area: experimentlist;
}

.main.project .offer-list-component {
  grid-area: offerlist;
}

.main.project .quality-control-list-component {
  grid-area: qualitycontrollist;
}

.main.project-overview {
  grid-template-columns: minmax(max-content, 100%);
  grid-template-rows: auto;
  grid-template-areas:
    "projectcollection";
}

.main .project-overview .project-collection-component {
  grid-area: projectcollection;
}

.main.sample {
  grid-template-columns: minmax(min-content, 60%) minmax(min-content, 50%);
  grid-template-rows: minmax(min-content, 20%) minmax(min-content, 75%);
  grid-template-areas:
    ". batchdetails"
    "sampledetails sampledetails";
}

.main.sample .batch-details-component {
  grid-area: batchdetails;
}

.main.sample .sample-details-component {
  grid-area: sampledetails;
}


/*Large devices (large desktops, 1200px and up)*/
@media only screen and (max-width: 1200px) {
  .main.experiment {
    grid-template-columns: minmax(min-content, 1fr);
    grid-template-areas:
    "experimentdetails";
    grid-template-rows: minmax(min-content, 1fr);
  }

  .main.project {
    grid-template-columns: minmax(min-content, 1fr);
    grid-template-areas:
    "projectdetails"
    "experimentlist"
    "projectlinks";
    grid-template-rows: minmax(min-content, 60%) minmax(min-content, 20%) minmax(min-content, 20%);
  }

  .main.sample {
    grid-template-columns: minmax(min-content, 1fr);
    grid-template-areas:
    "batchdetails"
    "sampledetails";
    grid-template-rows: minmax(min-content, 20%) minmax(min-content, 75%);
  }
}

/* All custom css for components which extend the page-area component go in here! */
.page {
  height: 100%;
  width: 100%;
}

.page-area {
  background-color: var(--lumo-base-color);
  padding: var(--lumo-space-l);
  flex-direction: column;
  display: flex;
  gap: var(--lumo-space-s);
}

.page-area .title {
  font-weight: bold;
  color: var(--lumo-secondary-text-color);
  font-size: var(--lumo-font-size-xxl);
  margin-bottom: 0.5rem;
}

.page-area.navbar {
  justify-content: space-evenly;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--lumo-space-xs);
}

.batch-details-component .editor-buttons {
  display: inline-flex;
  gap: var(--lumo-space-s);
}

.batch-details-component .title-and-controls {
  display: inline-flex;
  justify-content: space-between;
  align-items: baseline;
}

.experiment-details-component .sample-source-display {
  flex-direction: row;
  display: flex;
  justify-content: space-between;
}

.experiment-details-component .sample-source-display .sample-source {
  flex-direction: column;
  display: flex;
  row-gap: var(--lumo-space-m);
}

.experiment-details-component .sample-source-display .sample-source .header {
  display: inline-flex;
  justify-content: start;
  align-items: start;
  column-gap: var(--lumo-space-m);
  font-size: var(--lumo-font-size-m);
  font-weight: 500;
}

.experiment-details-component .sample-source-display .sample-source .ontologies {
  display: flex;
  row-gap: var(--lumo-space-s);
  align-items: center;
  width: 100%;
  flex-direction: column;
}

.experiment-details-component .sample-source-display .sample-source .ontologies .ontology {
  display: inline-flex;
  gap: var(--lumo-space-s);
  align-items: center;
  width: 100%;
}

.experiment-details-component .sample-source-display .icon-with-list vaadin-icon {
  color: var(--lumo-primary-color);
  margin-right: 1em;
  margin-top: 0.5em;
}

.experiment-details-component .header {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
}

.experiment-details-component .details-content {
  padding: var(--lumo-space-m);
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  gap: var(--lumo-space-m);
  font-size: var(--lumo-font-size-s);
}

.experiment-details-component .details-content .experimental-sheet {
  width: 100%;
  height: 100%;
}

.experiment-details-component .details-content .experimental-groups-container {
  width: 100%;
  height: 100%;
}

.experiment-details-component .sample-registration-possible {
  margin-bottom: var(--lumo-space-m);
}

.experiment-list-component .content {
  display: grid;
  gap: var(--lumo-space-m);
  grid-auto-rows: max-content;
}

.experiment-list-component .header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--lumo-space-m);
}

.measurement-details-component {
  height: 100%;
  justify-content: center;
  align-items: center;
}

.measurement-details-component .measurement-tabsheet {
  height: 100%;
  width: 100%;
}

.measurement-details-component .measurement-grid {
  height: 100%;
}

.measurement-details-component .measurement-grid .measurement-column-cell {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  align-items: center;
}

.measurement-details-component .measurement-grid .sample-column-cell {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  align-items: center;
}

.measurement-details-component .measurement-grid .sample-column-cell .expand-icon {
  width: 1em;
  height: 1em;
  color: var(--lumo-primary-color);
  cursor: pointer;
}

.measurement-details-component .measurement-grid .organisation-entry {
  align-items: center;
  column-gap: var(--lumo-space-s);
  display: flex;
}

.measurement-details-component .measurement-grid .organisation-entry .organisation-icon {
  min-width: var(--lumo-icon-size-m);
  min-height: var(--lumo-icon-size-m);
}

.measurement-details-component .measurement-grid .instrument-column {
  column-gap: var(--lumo-space-s);
  align-items: center;
  display: inline-flex;
}

.measurement-details-component .measurement-grid .measurement-item {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-s);
  cursor: default;
}

.measurement-details-component .measurement-grid .measurement-item .entry {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
}

.measurement-details-component .measurement-grid .measurement-item .entry .entry-label {
  font-weight: bold;
  white-space: nowrap;
}

.tab-with-count {
  gap: var(--lumo-space-s);
}

.ontology-lookup-component {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-m);
}

.ontology-lookup-component .search-field {
  max-width: 33%;
}

.ontology-lookup-component .ontology-grid-section {
  border-top: 1px solid var(--lumo-contrast-10pct);
  margin-right: var(--lumo-space-xl);
  row-gap: var(--lumo-space-s);
  padding-top: var(--lumo-space-m);
  height: 100%;
  display: flex;
  flex-direction: column;
}

.ontology-lookup-component .ontology-grid-section .ontology-grid {
  height: 100%;
  margin-top: var(--lumo-space-s);
}

.ontology-lookup-component .ontology-grid vaadin-grid-cell-content {
  padding: var(--lumo-space-xs);
}

.ontology-lookup-component .ontology-item {
  border: black;
  border-radius: var(--lumo-border-radius-m);
  box-shadow: var(--lumo-box-shadow-s);
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  margin-bottom: var(--lumo-space-s);
  margin-top: var(--lumo-space-s);
  overflow: hidden;
  padding: var(--lumo-space-m);
  row-gap: var(--lumo-space-s);
  text-overflow: ellipsis;
  white-space: normal;
}

.ontology-lookup-component .ontology-item .header {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  align-items: center;
}

.ontology-lookup-component .ontology-item .header .copy-icon {
  display: inline-flex;
  font-size: smaller;
  flex-shrink: 0;
  color: var(--lumo-tertiary-text-color);
}

.copy-icon-success {
  display: inline-flex;
  font-size: smaller;
  flex-shrink: 0;
  color: var(--lumo-success-color);
}

.success-background-hue {
  background-color: var(--lumo-success-color-10pct);
}

.base-background {
  background-color: var(--lumo-base-color);
}

.ontology-lookup-component .ontology-item .ontology-item-title {
  font-weight: bold;
  color: var(--lumo-secondary-text-color);
  font-size: var(--lumo-font-size-l);
}

.ontology-lookup-component .ontology-item .url {
  display: inline-flex;
  font-size: smaller;
  flex-shrink: 0;
  color: var(--lumo-tertiary-text-color);
}

.personal-access-token-component {
  row-gap: var(--lumo-space-l);
  display: flex;
}

.personal-access-token-component .header {
  justify-content: space-between;
  display: inline-flex;
}

.personal-access-token-component .header .buttons {
  column-gap: var(--lumo-space-s);
  display: inline-flex;
}

.personal-access-token-component .description {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-m);
}

.personal-access-token-component .personal-access-token-container {
  width: 60%;
  height: 60%;
}

.personal-access-token-component .personal-access-token-container .personal-access-token-list {
  border: 1px solid var(--lumo-contrast-20pct);
}

.personal-access-token-component .personal-access-token-container .show-created-personal-access-token-details {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-s);
  padding: var(--lumo-space-m);
  border: 1px solid var(--lumo-contrast-20pct);
  width: 100%;
}

.personal-access-token-component .personal-access-token-container .show-created-personal-access-token-layout {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.personal-access-token-component .personal-access-token-container .show-created-personal-access-token-details .copy-disclaimer {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  font-size: var(--lumo-font-size-s);
  align-items: center;
}

.personal-access-token-component .personal-access-token-container .show-created-personal-access-token-details .token-text {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  align-items: center;
}

.personal-access-token-component .personal-access-token-container .show-encrypted-personal-access-token-details {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-m);
}

.personal-access-token-component .personal-access-token-container .show-encrypted-personal-access-token-details .copy-disclaimer {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  align-items: center;

}

.personal-access-token-component .personal-access-token-container .show-encrypted-personal-access-token-details .expiration-date {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  align-items: center;
}

.personal-access-token-component .personal-access-token-container .show-encrypted-personal-access-token-details .token-text {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  align-items: center;
}

.personal-access-token-component .personal-access-token-container .show-encrypted-personal-access-token-layout {
  display: flex;
  padding: var(--lumo-space-m);
  border-bottom: 1px solid var(--lumo-contrast-20pct);
  justify-content: space-between;
  align-items: center;
}

.project-access-component {
  display: flex;
  row-gap: var(--lumo-space-l);
  flex-direction: column;
  height: auto;
}

.project-access-component .header {
  display: inline-flex;
  justify-content: space-between;
  align-items: baseline;
}

.project-access-component .change-project-access-cell {
  display: inline-flex;
  column-gap: var(--lumo-space-l);
  align-items: center;
}

.project-access-component .oidc-cell {
  display: inline-flex;
  gap: var(--lumo-space-s);
  align-items: center;
}

.project-collection-component {
  height: 100%;
  /*Necessary since we currently don't distinguish
  borders if only one component was provided within a main area*/
  border-top: none;
}

.project-collection-component .header {
  display: flex;
  column-gap: var(--lumo-space-xl);
  flex-direction: column;
}

.project-collection-component .controls {
  display: flex;
  align-content: space-between;
  gap: 1rem;
}

.project-collection-component .project-grid {
  height: 100%;
  margin-top: var(--lumo-space-s);
}

.project-collection-component .project-grid vaadin-grid-cell-content {
  padding: var(--lumo-space-xs);
}

.project-collection-component .project-overview-item {
  border: black;
  border-radius: var(--lumo-border-radius-m);
  box-shadow: var(--lumo-box-shadow-s);
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  margin-bottom: var(--lumo-space-s);
  margin-top: var(--lumo-space-s);
  overflow: hidden;
  padding: var(--lumo-space-l);
  row-gap: var(--lumo-space-s);
  text-overflow: ellipsis;
  white-space: normal;
  cursor: pointer;
}

.project-collection-component .project-overview-item .header {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
  flex-direction: row;
}

.project-collection-component .project-overview-item .project-overview-item-title {
  font-weight: bold;
  color: var(--lumo-secondary-text-color);
  font-size: var(--lumo-font-size-l);
}

.project-collection-component .project-overview-item .details {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-s);
  color: var(--lumo-secondary-text-color);
}

.project-details-component .header {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
}

.quality-control-list-component .header {
  display: inline-flex;
  justify-content: space-between;
  align-items: baseline;
}

.raw-data-details-component .raw-data-details {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-s);
}

.raw-data-details-component .raw-data-grid .sample-information {
  text-overflow: ellipsis;
  overflow: hidden;
  display: inline-flex;
  white-space: nowrap;
  width: calc(80%);
}

/*We want to style the cells within the rows containing the components and values within the measurement grid to be clickable*/
.raw-data-details-component .raw-data-grid > * {
  cursor: pointer;
}

/*We want to style the rows within the measurement grid to be clickable without the items showing the pointer cursor*/
.raw-data-details-component .raw-data-grid ::part(row) {
  cursor: pointer;
}

.raw-data-details-component .raw-data-grid .raw-data-item {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-s);
  cursor: default;
}

.raw-data-details-component .raw-data-grid .raw-data-item .entry {
  display: inline-flex;
  column-gap: var(--lumo-space-s);
}

.raw-data-details-component .raw-data-grid .raw-data-item .entry .entry-label {
  font-weight: bold;
  white-space: nowrap;
}

.raw-data-details-component .raw-data-grid .raw-data-item .entry-value-list {
  display: flex;
  flex-wrap: wrap;
  gap: var(--lumo-space-s);
}

.raw-data-details-component .raw-data-grid .raw-data-item .entry-value {
  display: inline-flex;
  white-space: nowrap;
}

.raw-data-download-information-component {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-l);
}

.raw-data-download-information-component .section .section-title {
  display: inline-flex;
  align-items: center;
  column-gap: var(--lumo-space-m);
  font-weight: bold;
}

.project-details-component .ontology-entry-collection {
  display: inline-flex;
  flex-wrap: wrap;
  gap: var(--lumo-space-xs);
  width: 100%;
  white-space: nowrap;
}

.sample-details-component .sample-details-content {
  display: flex;
  flex-direction: column;
  margin-bottom: var(--lumo-space-m);
  height: 100%;
}

.sample-details-component .sample-count {
  display: inline-flex;
  padding-bottom: var(--lumo-space-s);
  color: var(--lumo-secondary-text-color);
}

.user-profile-component {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-xl);
}

.user-profile-component .user-details-card {
  display: flex;
  flex-direction: row;
  column-gap: 5rem;
  background-color: var(--lumo-base-color);
  border: black;
  border-radius: var(--lumo-border-radius-m);
  box-shadow: var(--lumo-box-shadow-s);
  box-sizing: border-box;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 5rem;
  min-width: fit-content;
  width: 66%;
}

.user-profile-component .change-name {
  color: var(--lumo-primary-text-color);
  cursor: pointer;
  width: fit-content;
}

.user-profile-component .user-details-card .details {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-l);
}

.user-profile-component .user-details-card .detail {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-s);
}

.user-profile-component .user-details-card .avatar-with-name {
  display: flex;
  flex-direction: column;
  row-gap: var(--lumo-space-l);
  column-gap: initial;
}

.user-profile-component .user-details-card .user-avatar {
  height: 5rem;
  width: 5rem;
}
